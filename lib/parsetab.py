
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftDOTleftPLUSMINUSleftTIMESDIVIDEleftEEQUALrightUMINUSAGENTATTRSET AGENTSET ALL BEGIN BEHAVIOUR BUT COLON COMMA DIVIDE DOT EEQUAL ELSE END ENVIRONMENT EQUAL FALSE FILTER FUNCTION GT IF LIST LPAREN LT MINIMUM MINUS MODEL NAME NUMBER ONE PIPE PLUS PYTHONLINK RETURN ROLES ROLESET RPAREN SEMICOLON SET STRING SUBL SUBR TIMES TRUE VAR WHILE WITH program : headers b_bodies  headers : header  headers : header headers  header : agent_model  header : role_set  header : agent_set  header : agent_attr_set  header : environment_def  header : assign  agent_model : MODEL STRING SEMICOLON  role_set : ROLESET LPAREN role_set_statement RPAREN SEMICOLON  role_set_statement : role_set_statement COMMA  role_def  role_set_statement : role_def  role_def : BEGIN nameval_pairs END  agent_set : AGENTSET LPAREN role_set_statement RPAREN SEMICOLON  agent_attr_set : AGENTATTRSET literal_list_set_statement SEMICOLON  environment_def : ENVIRONMENT LPAREN role_def RPAREN SEMICOLON literal_list_set_statement : LPAREN literal_list RPARENliteral_list : NAME COMMA literal_listliteral_list : NAME b_bodies : b_bodies b_body  b_bodies : b_body  b_body : behaviour_def\n               | function_def  behaviour_def : BEHAVIOUR NAME BEGIN with_list END function_def : FUNCTION NAME LPAREN names_list RPAREN BEGIN statements END function_def : FUNCTION LPAREN names_list RPAREN BEGIN statements END names_list : NAME COMMA names_list  names_list : NAME  assign : VAR NAME EQUAL expr SEMICOLON  assign : NAME EQUAL expr SEMICOLON  assign : VAR NAME SEMICOLON  assign : NAME DOT NAME EQUAL expr SEMICOLON  with_list : with_list with_block  with_list : with_block  with_block : WITH with_set BEGIN statements END  with_block : WITH with_set BEGIN statements END PIPE  with_set : with_set DOT with_set  with_set : ALL  with_set : ONE  with_set : ROLES LPAREN string_list RPAREN  with_set : BUT LPAREN expr RPAREN  with_set : MINIMUM LPAREN function_def RPAREN  with_set : FILTER LPAREN function_def RPAREN  string_list : STRING  string_list : string_list COMMA STRING  statements : statements statement  statements : statement  statement : assign\n                  | proccall\n                  | returnstmt\n                  | if_block\n                  | while_block proccall : NAME list_set_statement SEMICOLON  returnstmt : RETURN expr SEMICOLON  if_block : IF LPAREN expr RPAREN then_else_statement  if_block : IF LPAREN expr RPAREN then_else_statement ELSE then_else_statement then_else_statement : statement  then_else_statement : BEGIN statements END  while_block : WHILE LPAREN expr RPAREN then_else_statement expr : MINUS expr %prec UMINUSexpr : expr PLUS exprexpr : expr MINUS exprexpr : expr TIMES exprexpr : expr DIVIDE exprexpr : expr EEQUAL exprexpr : expr LT exprexpr : expr GT exprexpr : LPAREN expr RPARENexpr : SET list_set_statementexpr : LIST list_set_statementlist_set_statement : LPAREN RPARENlist_set_statement : LPAREN set_expr_list RPARENset_expr_list : expr COMMA set_expr_listset_expr_list : exprexpr : BEGIN nameval_pairs END nameval_pairs : nameval_pairs COMMA nameval_pair  nameval_pairs : nameval_pair  nameval_pair : NAME COLON expr  expr : PYTHONLINK STRING  expr : NAME DOT NAME list_set_statement  expr : NAME DOT NAME  expr : NAME list_set_statement expr : with_setexpr : NAME SUBL expr SUBRexpr : NAMEexpr : NUMBERexpr : STRINGexpr : function_defexpr : TRUEexpr : FALSE'
    
_lr_action_items = {'ALL':([31,37,54,59,82,85,88,89,90,91,92,93,94,96,99,105,109,115,153,171,177,182,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'PLUS':([48,51,53,55,56,57,58,63,66,67,74,84,86,87,97,98,103,121,123,125,126,127,128,129,130,131,132,133,134,135,136,140,141,143,152,154,155,156,157,159,160,179,181,185,188,189,],[-39,-87,-88,-40,-90,-84,91,-89,-86,-91,91,-80,-70,91,-61,-71,-83,91,91,-72,-69,-38,91,-66,-62,-63,91,-65,-64,91,-76,-82,91,91,-43,-73,-42,-44,-41,-81,-85,-27,91,91,91,-26,]),'RETURN':([36,95,112,149,151,161,163,164,165,166,167,168,170,173,176,178,183,186,187,191,192,193,194,195,196,197,198,199,200,],[-32,-31,-30,171,-33,171,-48,-51,-49,-53,-52,171,-50,171,171,-47,171,-54,-55,171,171,-58,171,-56,-60,171,171,-59,-57,]),'FILTER':([31,37,54,59,82,85,88,89,90,91,92,93,94,96,99,105,109,115,153,171,177,182,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'DIVIDE':([48,51,53,55,56,57,58,63,66,67,74,84,86,87,97,98,103,121,123,125,126,127,128,129,130,131,132,133,134,135,136,140,141,143,152,154,155,156,157,159,160,179,181,185,188,189,],[-39,-87,-88,-40,-90,-84,94,-89,-86,-91,94,-80,-70,94,-61,-71,-83,94,94,-72,-69,-38,94,-66,94,94,94,-65,-64,94,-76,-82,94,94,-43,-73,-42,-44,-41,-81,-85,-27,94,94,94,-26,]),'COLON':([72,],[109,]),'VAR':([0,3,4,5,7,10,12,14,36,38,46,95,107,112,113,142,149,151,161,163,164,165,166,167,168,170,173,176,178,183,186,187,191,192,193,194,195,196,197,198,199,200,],[6,-4,-5,-8,-6,6,-7,-9,-32,-10,-16,-31,-11,-30,-15,-17,6,-33,6,-48,-51,-49,-53,-52,6,-50,6,6,-47,6,-54,-55,6,6,-58,6,-56,-60,6,6,-59,-57,]),'PIPE':([184,],[190,]),'MODEL':([0,3,4,5,7,10,12,14,36,38,46,95,107,112,113,142,151,],[8,-4,-5,-8,-6,8,-7,-9,-32,-10,-16,-31,-11,-30,-15,-17,-33,]),'AGENTSET':([0,3,4,5,7,10,12,14,36,38,46,95,107,112,113,142,151,],[9,-4,-5,-8,-6,9,-7,-9,-32,-10,-16,-31,-11,-30,-15,-17,-33,]),'BEGIN':([17,20,31,32,37,41,48,54,55,59,70,82,85,89,90,91,92,93,94,96,99,105,109,118,127,145,150,152,153,155,156,157,171,177,182,191,192,198,],[35,35,62,35,62,76,-39,62,-40,62,35,62,62,62,62,62,62,62,62,62,62,62,62,149,-38,161,173,-43,62,-42,-44,-41,62,62,62,194,194,194,]),'MINIMUM':([31,37,54,59,82,85,88,89,90,91,92,93,94,96,99,105,109,115,153,171,177,182,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'ONE':([31,37,54,59,82,85,88,89,90,91,92,93,94,96,99,105,109,115,153,171,177,182,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'LIST':([31,37,54,59,82,85,89,90,91,92,93,94,96,99,105,109,153,171,177,182,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'SEMICOLON':([18,19,29,48,51,53,55,56,57,58,63,66,67,69,74,75,80,84,86,97,98,103,106,121,125,126,127,128,129,130,131,132,133,134,136,140,152,154,155,156,157,159,160,179,180,181,189,],[36,38,46,-39,-87,-88,-40,-90,-84,95,-89,-86,-91,107,112,113,-18,-80,-70,-61,-71,-83,142,151,-72,-69,-38,-68,-66,-62,-63,-67,-65,-64,-76,-82,-43,-73,-42,-44,-41,-81,-85,-27,186,187,-26,]),'IF':([36,95,112,149,151,161,163,164,165,166,167,168,170,173,176,178,183,186,187,191,192,193,194,195,196,197,198,199,200,],[-32,-31,-30,162,-33,162,-48,-51,-49,-53,-52,162,-50,162,162,-47,162,-54,-55,162,162,-58,162,-56,-60,162,162,-59,-57,]),'BUT':([31,37,54,59,82,85,88,89,90,91,92,93,94,96,99,105,109,115,153,171,177,182,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'SUBR':([48,51,53,55,56,57,63,66,67,84,86,97,98,103,125,126,127,128,129,130,131,132,133,134,136,140,141,152,154,155,156,157,159,160,179,189,],[-39,-87,-88,-40,-90,-84,-89,-86,-91,-80,-70,-61,-71,-83,-72,-69,-38,-68,-66,-62,-63,-67,-65,-64,-76,-82,160,-43,-73,-42,-44,-41,-81,-85,-27,-26,]),'RPAREN':([33,34,39,44,45,48,51,53,55,56,57,63,66,67,68,77,78,84,85,86,87,97,98,103,108,111,119,120,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,148,152,154,155,156,157,159,160,174,175,179,185,188,189,],[-13,69,75,80,-20,-39,-87,-88,-40,-90,-84,-89,-86,-91,106,-29,118,-80,125,-70,126,-61,-71,-83,-12,-14,150,-19,152,-75,154,-72,-69,-38,-68,-66,-62,-63,-67,-65,-64,155,-76,156,-45,157,-82,-28,-43,-73,-42,-44,-41,-81,-85,-74,-46,-27,191,192,-26,]),'WITH':([76,114,116,146,184,190,],[115,-35,115,-34,-36,-37,]),'FUNCTION':([3,4,5,7,10,11,12,14,21,22,23,25,26,31,36,37,38,40,46,54,59,82,83,85,89,90,91,92,93,94,95,96,99,101,105,107,109,112,113,142,147,151,153,171,177,179,182,189,],[-4,-5,-8,-6,-2,27,-7,-9,-3,-24,27,-23,-22,27,-32,27,-10,-21,-16,27,27,27,27,27,27,27,27,27,27,27,-31,27,27,27,27,-11,27,-30,-15,-17,-25,-33,27,27,27,-27,27,-26,]),'GT':([48,51,53,55,56,57,58,63,66,67,74,84,86,87,97,98,103,121,123,125,126,127,128,129,130,131,132,133,134,135,136,140,141,143,152,154,155,156,157,159,160,179,181,185,188,189,],[-39,-87,-88,-40,-90,-84,89,-89,-86,-91,89,-80,-70,89,-61,-71,-83,89,89,-72,-69,-38,89,-66,-62,-63,89,-65,-64,89,-76,-82,89,89,-43,-73,-42,-44,-41,-81,-85,-27,89,89,89,-26,]),'NAME':([0,3,4,5,6,7,10,12,14,24,27,28,30,31,35,36,37,38,42,46,54,59,62,79,81,82,85,89,90,91,92,93,94,95,96,99,104,105,107,109,110,112,113,117,142,149,151,153,161,163,164,165,166,167,168,170,171,173,176,177,178,182,183,186,187,191,192,193,194,195,196,197,198,199,200,],[15,-4,-5,-8,18,-6,15,-7,-9,41,43,45,47,66,72,-32,66,-10,77,-16,66,66,72,77,45,66,66,66,66,66,66,66,66,-31,66,66,140,66,-11,66,72,-30,-15,77,-17,169,-33,66,169,-48,-51,-49,-53,-52,169,-50,66,169,169,66,-47,66,169,-54,-55,169,169,-58,169,-56,-60,169,169,-59,-57,]),'FALSE':([31,37,54,59,82,85,89,90,91,92,93,94,96,99,105,109,153,171,177,182,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'COMMA':([33,34,39,45,48,51,53,55,56,57,63,66,67,71,73,77,84,86,97,98,100,103,108,111,123,125,126,127,128,129,130,131,132,133,134,136,138,139,140,143,144,152,154,155,156,157,159,160,175,179,189,],[-13,70,70,81,-39,-87,-88,-40,-90,-84,-89,-86,-91,-78,110,117,-80,-70,-61,-71,110,-83,-12,-14,153,-72,-69,-38,-68,-66,-62,-63,-67,-65,-64,-76,-45,158,-82,-79,-77,-43,-73,-42,-44,-41,-81,-85,-46,-27,-26,]),'END':([36,48,51,53,55,56,57,63,66,67,71,73,84,86,95,97,98,100,103,112,114,116,125,126,127,128,129,130,131,132,133,134,136,140,143,144,146,151,152,154,155,156,157,159,160,163,164,165,166,167,168,170,176,178,179,183,184,186,187,189,190,193,195,196,197,199,200,],[-32,-39,-87,-88,-40,-90,-84,-89,-86,-91,-78,111,-80,-70,-31,-61,-71,136,-83,-30,-35,147,-72,-69,-38,-68,-66,-62,-63,-67,-65,-64,-76,-82,-79,-77,-34,-33,-43,-73,-42,-44,-41,-81,-85,-48,-51,-49,-53,-52,179,-50,184,-47,-27,189,-36,-54,-55,-26,-37,-58,-56,-60,199,-59,-57,]),'ROLESET':([0,3,4,5,7,10,12,14,36,38,46,95,107,112,113,142,151,],[2,-4,-5,-8,-6,2,-7,-9,-32,-10,-16,-31,-11,-30,-15,-17,-33,]),'BEHAVIOUR':([3,4,5,7,10,11,12,14,21,22,23,25,26,36,38,40,46,95,107,112,113,142,147,151,179,189,],[-4,-5,-8,-6,-2,24,-7,-9,-3,-24,24,-23,-22,-32,-10,-21,-16,-31,-11,-30,-15,-17,-25,-33,-27,-26,]),'EEQUAL':([48,51,53,55,56,57,58,63,66,67,74,84,86,87,97,98,103,121,123,125,126,127,128,129,130,131,132,133,134,135,136,140,141,143,152,154,155,156,157,159,160,179,181,185,188,189,],[-39,-87,-88,-40,-90,-84,90,-89,-86,-91,90,-80,-70,90,-61,-71,-83,90,90,-72,-69,-38,90,-66,90,90,90,90,90,90,-76,-82,90,90,-43,-73,-42,-44,-41,-81,-85,-27,90,90,90,-26,]),'$end':([1,22,23,25,26,40,147,179,189,],[0,-24,-1,-23,-22,-21,-25,-27,-26,]),'EQUAL':([15,18,47,169,],[31,37,82,31,]),'PYTHONLINK':([31,37,54,59,82,85,89,90,91,92,93,94,96,99,105,109,153,171,177,182,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'WHILE':([36,95,112,149,151,161,163,164,165,166,167,168,170,173,176,178,183,186,187,191,192,193,194,195,196,197,198,199,200,],[-32,-31,-30,172,-33,172,-48,-51,-49,-53,-52,172,-50,172,172,-47,172,-54,-55,172,172,-58,172,-56,-60,172,172,-59,-57,]),'NUMBER':([31,37,54,59,82,85,89,90,91,92,93,94,96,99,105,109,153,171,177,182,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'SET':([31,37,54,59,82,85,89,90,91,92,93,94,96,99,105,109,153,171,177,182,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'STRING':([8,31,37,50,54,59,82,85,89,90,91,92,93,94,96,99,102,105,109,153,158,171,177,182,],[19,53,53,84,53,53,53,53,53,53,53,53,53,53,53,53,138,53,53,53,175,53,53,53,]),'LPAREN':([2,9,13,16,27,31,37,43,49,52,54,59,60,61,64,65,66,82,85,89,90,91,92,93,94,96,99,105,109,140,153,162,169,171,172,177,182,],[17,20,28,32,42,54,54,79,83,85,54,54,85,99,101,102,85,54,54,54,54,54,54,54,54,54,54,54,54,85,54,177,85,54,182,54,54,]),'LT':([48,51,53,55,56,57,58,63,66,67,74,84,86,87,97,98,103,121,123,125,126,127,128,129,130,131,132,133,134,135,136,140,141,143,152,154,155,156,157,159,160,179,181,185,188,189,],[-39,-87,-88,-40,-90,-84,93,-89,-86,-91,93,-80,-70,93,-61,-71,-83,93,93,-72,-69,-38,93,-66,-62,-63,93,-65,-64,93,-76,-82,93,93,-43,-73,-42,-44,-41,-81,-85,-27,93,93,93,-26,]),'TIMES':([48,51,53,55,56,57,58,63,66,67,74,84,86,87,97,98,103,121,123,125,126,127,128,129,130,131,132,133,134,135,136,140,141,143,152,154,155,156,157,159,160,179,181,185,188,189,],[-39,-87,-88,-40,-90,-84,96,-89,-86,-91,96,-80,-70,96,-61,-71,-83,96,96,-72,-69,-38,96,-66,96,96,96,-65,-64,96,-76,-82,96,96,-43,-73,-42,-44,-41,-81,-85,-27,96,96,96,-26,]),'TRUE':([31,37,54,59,82,85,89,90,91,92,93,94,96,99,105,109,153,171,177,182,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'DOT':([15,48,55,57,66,127,145,152,155,156,157,169,],[30,-39,-40,88,104,-38,88,-43,-42,-44,-41,30,]),'MINUS':([31,37,48,51,53,54,55,56,57,58,59,63,66,67,74,82,84,85,86,87,89,90,91,92,93,94,96,97,98,99,103,105,109,121,123,125,126,127,128,129,130,131,132,133,134,135,136,140,141,143,152,153,154,155,156,157,159,160,171,177,179,181,182,185,188,189,],[59,59,-39,-87,-88,59,-40,-90,-84,92,59,-89,-86,-91,92,59,-80,59,-70,92,59,59,59,59,59,59,59,-61,-71,59,-83,59,59,92,92,-72,-69,-38,92,-66,-62,-63,92,-65,-64,92,-76,-82,92,92,-43,59,-73,-42,-44,-41,-81,-85,59,59,-27,92,59,92,92,-26,]),'AGENTATTRSET':([0,3,4,5,7,10,12,14,36,38,46,95,107,112,113,142,151,],[13,-4,-5,-8,-6,13,-7,-9,-32,-10,-16,-31,-11,-30,-15,-17,-33,]),'SUBL':([66,],[105,]),'ELSE':([36,95,112,151,164,165,166,167,170,186,187,193,195,196,199,200,],[-32,-31,-30,-33,-51,-49,-53,-52,-50,-54,-55,-58,198,-60,-59,-57,]),'ROLES':([31,37,54,59,82,85,88,89,90,91,92,93,94,96,99,105,109,115,153,171,177,182,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'ENVIRONMENT':([0,3,4,5,7,10,12,14,36,38,46,95,107,112,113,142,151,],[16,-4,-5,-8,-6,16,-7,-9,-32,-10,-16,-31,-11,-30,-15,-17,-33,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'string_list':([102,],[139,]),'program':([0,],[1,]),'proccall':([149,161,168,173,176,183,191,192,194,197,198,],[170,170,170,170,170,170,170,170,170,170,170,]),'agent_attr_set':([0,10,],[12,12,]),'agent_model':([0,10,],[3,3,]),'role_set':([0,10,],[4,4,]),'literal_list_set_statement':([13,],[29,]),'b_body':([11,23,],[26,40,]),'returnstmt':([149,161,168,173,176,183,191,192,194,197,198,],[164,164,164,164,164,164,164,164,164,164,164,]),'if_block':([149,161,168,173,176,183,191,192,194,197,198,],[167,167,167,167,167,167,167,167,167,167,167,]),'b_bodies':([11,],[23,]),'agent_set':([0,10,],[7,7,]),'environment_def':([0,10,],[5,5,]),'with_set':([31,37,54,59,82,85,88,89,90,91,92,93,94,96,99,105,109,115,153,171,177,182,],[57,57,57,57,57,57,127,57,57,57,57,57,57,57,57,57,57,145,57,57,57,57,]),'nameval_pairs':([35,62,],[73,100,]),'names_list':([42,79,117,],[78,119,148,]),'nameval_pair':([35,62,110,],[71,71,144,]),'with_block':([76,116,],[114,146,]),'while_block':([149,161,168,173,176,183,191,192,194,197,198,],[166,166,166,166,166,166,166,166,166,166,166,]),'function_def':([11,23,31,37,54,59,82,83,85,89,90,91,92,93,94,96,99,101,105,109,153,171,177,182,],[22,22,63,63,63,63,63,122,63,63,63,63,63,63,63,63,63,137,63,63,63,63,63,63,]),'header':([0,10,],[10,10,]),'role_def':([17,20,32,70,],[33,33,68,108,]),'expr':([31,37,54,59,82,85,89,90,91,92,93,94,96,99,105,109,153,171,177,182,],[58,74,87,97,121,123,128,129,130,131,132,133,134,135,141,143,123,181,185,188,]),'headers':([0,10,],[11,21,]),'literal_list':([28,81,],[44,120,]),'behaviour_def':([11,23,],[25,25,]),'statement':([149,161,168,173,176,183,191,192,194,197,198,],[163,163,178,163,178,178,193,193,163,178,193,]),'role_set_statement':([17,20,],[34,39,]),'set_expr_list':([85,153,],[124,174,]),'list_set_statement':([52,60,66,140,169,],[86,98,103,159,180,]),'with_list':([76,],[116,]),'assign':([0,10,149,161,168,173,176,183,191,192,194,197,198,],[14,14,165,165,165,165,165,165,165,165,165,165,165,]),'statements':([149,161,173,194,],[168,176,183,197,]),'then_else_statement':([191,192,198,],[195,196,200,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> headers b_bodies','program',2,'p_program_0','swapl.py',39),
  ('headers -> header','headers',1,'p_headers_1','swapl.py',47),
  ('headers -> header headers','headers',2,'p_headers_2','swapl.py',51),
  ('header -> agent_model','header',1,'p_header_agent_model','swapl.py',57),
  ('header -> role_set','header',1,'p_header_role_set','swapl.py',64),
  ('header -> agent_set','header',1,'p_header_agent_set','swapl.py',67),
  ('header -> agent_attr_set','header',1,'p_header_agent_attributes','swapl.py',70),
  ('header -> environment_def','header',1,'p_header_environment','swapl.py',73),
  ('header -> assign','header',1,'p_header_assign','swapl.py',76),
  ('agent_model -> MODEL STRING SEMICOLON','agent_model',3,'p_agent_model','swapl.py',81),
  ('role_set -> ROLESET LPAREN role_set_statement RPAREN SEMICOLON','role_set',5,'p_role_set','swapl.py',88),
  ('role_set_statement -> role_set_statement COMMA role_def','role_set_statement',3,'p_role_set_statement_1','swapl.py',93),
  ('role_set_statement -> role_def','role_set_statement',1,'p_role_set_statement_2','swapl.py',98),
  ('role_def -> BEGIN nameval_pairs END','role_def',3,'p_role_def','swapl.py',102),
  ('agent_set -> AGENTSET LPAREN role_set_statement RPAREN SEMICOLON','agent_set',5,'p_agent_set','swapl.py',111),
  ('agent_attr_set -> AGENTATTRSET literal_list_set_statement SEMICOLON','agent_attr_set',3,'p_agent_attr_set','swapl.py',119),
  ('environment_def -> ENVIRONMENT LPAREN role_def RPAREN SEMICOLON','environment_def',5,'p_environment_def','swapl.py',127),
  ('literal_list_set_statement -> LPAREN literal_list RPAREN','literal_list_set_statement',3,'p_literal_listset','swapl.py',133),
  ('literal_list -> NAME COMMA literal_list','literal_list',3,'p_literal_list_1','swapl.py',137),
  ('literal_list -> NAME','literal_list',1,'p_literal_list_2','swapl.py',142),
  ('b_bodies -> b_bodies b_body','b_bodies',2,'p_b_bodies_1','swapl.py',147),
  ('b_bodies -> b_body','b_bodies',1,'p_b_bodies_2','swapl.py',151),
  ('b_body -> behaviour_def','b_body',1,'p_b_body','swapl.py',156),
  ('b_body -> function_def','b_body',1,'p_b_body','swapl.py',157),
  ('behaviour_def -> BEHAVIOUR NAME BEGIN with_list END','behaviour_def',5,'p_behaviour_def','swapl.py',161),
  ('function_def -> FUNCTION NAME LPAREN names_list RPAREN BEGIN statements END','function_def',8,'p_function_1_def','swapl.py',166),
  ('function_def -> FUNCTION LPAREN names_list RPAREN BEGIN statements END','function_def',7,'p_function_2_def','swapl.py',171),
  ('names_list -> NAME COMMA names_list','names_list',3,'p_names_list_1','swapl.py',180),
  ('names_list -> NAME','names_list',1,'p_name_list_2','swapl.py',184),
  ('assign -> VAR NAME EQUAL expr SEMICOLON','assign',5,'p_assing_1','swapl.py',191),
  ('assign -> NAME EQUAL expr SEMICOLON','assign',4,'p_assing_2','swapl.py',195),
  ('assign -> VAR NAME SEMICOLON','assign',3,'p_assing_3','swapl.py',199),
  ('assign -> NAME DOT NAME EQUAL expr SEMICOLON','assign',6,'p_assing_4','swapl.py',203),
  ('with_list -> with_list with_block','with_list',2,'p_with_list_1','swapl.py',211),
  ('with_list -> with_block','with_list',1,'p_with_list_2','swapl.py',215),
  ('with_block -> WITH with_set BEGIN statements END','with_block',5,'p_with_block_1','swapl.py',222),
  ('with_block -> WITH with_set BEGIN statements END PIPE','with_block',6,'p_with_block_2','swapl.py',226),
  ('with_set -> with_set DOT with_set','with_set',3,'p_with_set_0','swapl.py',233),
  ('with_set -> ALL','with_set',1,'p_with_set_1','swapl.py',237),
  ('with_set -> ONE','with_set',1,'p_with_set_2','swapl.py',241),
  ('with_set -> ROLES LPAREN string_list RPAREN','with_set',4,'p_with_set_3','swapl.py',245),
  ('with_set -> BUT LPAREN expr RPAREN','with_set',4,'p_with_set_4','swapl.py',249),
  ('with_set -> MINIMUM LPAREN function_def RPAREN','with_set',4,'p_with_set_5','swapl.py',253),
  ('with_set -> FILTER LPAREN function_def RPAREN','with_set',4,'p_with_set_6','swapl.py',257),
  ('string_list -> STRING','string_list',1,'p_string_list_1','swapl.py',262),
  ('string_list -> string_list COMMA STRING','string_list',3,'p_string_list_2','swapl.py',266),
  ('statements -> statements statement','statements',2,'p_statements_1','swapl.py',273),
  ('statements -> statement','statements',1,'p_statements_2','swapl.py',277),
  ('statement -> assign','statement',1,'p_statement','swapl.py',281),
  ('statement -> proccall','statement',1,'p_statement','swapl.py',282),
  ('statement -> returnstmt','statement',1,'p_statement','swapl.py',283),
  ('statement -> if_block','statement',1,'p_statement','swapl.py',284),
  ('statement -> while_block','statement',1,'p_statement','swapl.py',285),
  ('proccall -> NAME list_set_statement SEMICOLON','proccall',3,'p_proc_call','swapl.py',292),
  ('returnstmt -> RETURN expr SEMICOLON','returnstmt',3,'p_returnstmt','swapl.py',318),
  ('if_block -> IF LPAREN expr RPAREN then_else_statement','if_block',5,'p_if_1','swapl.py',325),
  ('if_block -> IF LPAREN expr RPAREN then_else_statement ELSE then_else_statement','if_block',7,'p_if_2','swapl.py',330),
  ('then_else_statement -> statement','then_else_statement',1,'p_then_else_1','swapl.py',336),
  ('then_else_statement -> BEGIN statements END','then_else_statement',3,'p_then_else_2','swapl.py',340),
  ('while_block -> WHILE LPAREN expr RPAREN then_else_statement','while_block',5,'p_while','swapl.py',347),
  ('expr -> MINUS expr','expr',2,'p_uminus_expr','swapl.py',358),
  ('expr -> expr PLUS expr','expr',3,'p_p_expr','swapl.py',362),
  ('expr -> expr MINUS expr','expr',3,'p_m_expr','swapl.py',366),
  ('expr -> expr TIMES expr','expr',3,'p_t_expr','swapl.py',370),
  ('expr -> expr DIVIDE expr','expr',3,'p_d_expr','swapl.py',374),
  ('expr -> expr EEQUAL expr','expr',3,'p_eequal','swapl.py',378),
  ('expr -> expr LT expr','expr',3,'p_lt','swapl.py',382),
  ('expr -> expr GT expr','expr',3,'p_gt','swapl.py',386),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expression_group','swapl.py',390),
  ('expr -> SET list_set_statement','expr',2,'p_set_expr','swapl.py',394),
  ('expr -> LIST list_set_statement','expr',2,'p_list_expr','swapl.py',399),
  ('list_set_statement -> LPAREN RPAREN','list_set_statement',2,'p_listset_0','swapl.py',405),
  ('list_set_statement -> LPAREN set_expr_list RPAREN','list_set_statement',3,'p_listset','swapl.py',409),
  ('set_expr_list -> expr COMMA set_expr_list','set_expr_list',3,'p_set_expr_list_1','swapl.py',413),
  ('set_expr_list -> expr','set_expr_list',1,'p_set_expr_list_2','swapl.py',418),
  ('expr -> BEGIN nameval_pairs END','expr',3,'p_struct','swapl.py',423),
  ('nameval_pairs -> nameval_pairs COMMA nameval_pair','nameval_pairs',3,'p_namevals_1','swapl.py',429),
  ('nameval_pairs -> nameval_pair','nameval_pairs',1,'p_namevals_2','swapl.py',435),
  ('nameval_pair -> NAME COLON expr','nameval_pair',3,'p_nameval','swapl.py',439),
  ('expr -> PYTHONLINK STRING','expr',2,'p_pythonlink','swapl.py',448),
  ('expr -> NAME DOT NAME list_set_statement','expr',4,'p_fun_call_2','swapl.py',452),
  ('expr -> NAME DOT NAME','expr',3,'p_field_expr','swapl.py',457),
  ('expr -> NAME list_set_statement','expr',2,'p_fun_call','swapl.py',461),
  ('expr -> with_set','expr',1,'p_with_set_expr','swapl.py',470),
  ('expr -> NAME SUBL expr SUBR','expr',4,'p_val_subscript_expr','swapl.py',474),
  ('expr -> NAME','expr',1,'p_val_expr','swapl.py',478),
  ('expr -> NUMBER','expr',1,'p_num_expr','swapl.py',482),
  ('expr -> STRING','expr',1,'p_string_expr','swapl.py',486),
  ('expr -> function_def','expr',1,'p_fundef_expr','swapl.py',490),
  ('expr -> TRUE','expr',1,'p_true_expr','swapl.py',494),
  ('expr -> FALSE','expr',1,'p_false_expr','swapl.py',498),
]
