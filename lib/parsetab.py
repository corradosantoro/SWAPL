
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEleftEEQUALrightUMINUSAGENTATTRSET AGENTSET ALL BEGIN BEHAVIOUR COLON COMMA DIVIDE DOT EEQUAL ELSE END ENVIRONMENT EQUAL FALSE FUNCTION GT IF LIST LPAREN LT MINUS MODEL NAME NUMBER ONE PIPE PLUS PYTHONLINK RETURN ROLES ROLESET RPAREN SEMICOLON SET STRING TIMES TRUE VAR WHILE WITH program : agent_model role_set agent_set program_opts b_bodies  program : agent_model role_set agent_set b_bodies  program_opts : program_opt  program_opts : program_opt program_opts  program_opt : agent_attr_set  program_opt : environment_def  program_opt : assign  agent_model : MODEL STRING SEMICOLON  role_set : ROLESET LPAREN role_set_statement RPAREN SEMICOLON  role_set_statement : role_set_statement COMMA  role_def  role_set_statement : role_def  role_def : BEGIN nameval_pairs END  agent_set : AGENTSET LPAREN role_set_statement RPAREN SEMICOLON  agent_attr_set : AGENTATTRSET literal_list_set_statement SEMICOLON  environment_def : ENVIRONMENT LPAREN role_set_statement RPAREN SEMICOLON literal_list_set_statement : LPAREN literal_list RPARENliteral_list : NAME COMMA literal_listliteral_list : NAME b_bodies : b_bodies b_body  b_bodies : b_body  b_body : BEHAVIOUR NAME BEGIN with_list END b_body : FUNCTION NAME LPAREN names_list RPAREN BEGIN statements END names_list : NAME COMMA names_list  names_list : NAME  assign : VAR NAME EQUAL expr SEMICOLON  assign : NAME EQUAL expr SEMICOLON  assign : VAR NAME SEMICOLON  assign : NAME DOT NAME EQUAL expr SEMICOLON  with_list : with_list with_block  with_list : with_block  with_block : WITH with_set BEGIN statements END  with_block : WITH with_set BEGIN statements END PIPE  with_set : ALL  with_set : ONE  with_set : ROLES LPAREN string_list RPAREN  string_list : STRING  string_list : string_list COMMA STRING  statements : statements statement  statements : statement  statement : assign\n                  | proccall\n                  | returnstmt\n                  | if_block\n                  | while_block proccall : NAME list_set_statement SEMICOLON  funcall : NAME list_set_statement  funcall : NAME DOT NAME list_set_statement  returnstmt : RETURN expr SEMICOLON  if_block : IF LPAREN expr RPAREN then_else_statement  if_block : IF LPAREN expr RPAREN then_else_statement ELSE then_else_statement then_else_statement : statement  then_else_statement : BEGIN statements END  while_block : WHILE LPAREN expr RPAREN then_else_statement expr : MINUS expr %prec UMINUSexpr : expr PLUS exprexpr : expr MINUS exprexpr : expr TIMES exprexpr : expr DIVIDE exprexpr : expr EEQUAL exprexpr : expr LT exprexpr : expr GT exprexpr : LPAREN expr RPARENexpr : SET list_set_statementexpr : LIST list_set_statementlist_set_statement : LPAREN set_expr_list RPARENset_expr_list : expr COMMA set_expr_listset_expr_list : exprexpr : BEGIN nameval_pairs END nameval_pairs : nameval_pairs COMMA nameval_pair  nameval_pairs : nameval_pair  nameval_pair : NAME COLON expr expr : funcallexpr : PYTHONLINK STRINGexpr : NAMEexpr : NUMBERexpr : STRINGexpr : NAME DOT NAMEexpr : TRUEexpr : FALSE'
    
_lr_action_items = {'BEGIN':([8,27,31,38,41,42,47,56,63,69,79,82,83,84,85,86,87,88,90,103,122,123,124,130,144,150,151,157,165,166,172,],[11,11,11,55,11,71,55,55,55,55,55,55,55,55,55,55,55,55,55,127,134,-34,-33,55,55,55,55,-35,167,167,167,]),'DIVIDE':([57,58,59,61,62,65,66,74,81,91,93,94,95,96,97,106,107,108,109,110,111,112,113,114,115,116,118,131,132,155,159,160,],[-78,83,-76,-75,-74,-72,-79,83,83,-63,-46,-54,-73,-64,83,83,-68,-62,83,-58,-59,83,-57,83,83,83,-77,-65,-47,83,83,83,]),'GT':([57,58,59,61,62,65,66,74,81,91,93,94,95,96,97,106,107,108,109,110,111,112,113,114,115,116,118,131,132,155,159,160,],[-78,88,-76,-75,-74,-72,-79,88,88,-63,-46,-54,-73,-64,88,88,-68,-62,88,-58,-59,-56,-57,-55,88,88,-77,-65,-47,88,88,88,]),'EQUAL':([17,40,54,139,],[38,69,79,38,]),'SEMICOLON':([4,32,35,40,57,58,59,61,62,65,66,72,77,91,93,94,95,96,97,98,106,107,108,109,110,111,112,113,114,115,118,131,132,152,155,],[7,49,51,68,-78,89,-76,-75,-74,-72,-79,102,-16,-63,-46,-54,-73,-64,119,120,129,-68,-62,-60,-58,-59,-56,-57,-55,-61,-77,-65,-47,161,162,]),'IF':([68,89,119,127,129,134,135,138,140,141,142,143,145,149,153,161,162,165,166,167,168,169,170,171,172,173,174,],[-27,-26,-25,137,-28,137,-41,-43,-44,-39,137,-40,-42,137,-38,-45,-48,137,137,137,-53,-51,-49,137,137,-52,-50,]),'AGENTSET':([6,49,],[10,-9,]),'TIMES':([57,58,59,61,62,65,66,74,81,91,93,94,95,96,97,106,107,108,109,110,111,112,113,114,115,116,118,131,132,155,159,160,],[-78,86,-76,-75,-74,-72,-79,86,86,-63,-46,-54,-73,-64,86,86,-68,-62,86,-58,-59,86,-57,86,86,86,-77,-65,-47,86,86,86,]),'LPAREN':([5,10,16,20,34,38,47,56,60,62,63,67,69,79,82,83,84,85,86,87,88,90,118,121,130,136,137,139,144,150,151,],[8,27,36,41,50,56,56,56,90,90,56,90,56,56,56,56,56,56,56,56,56,56,90,133,56,150,151,90,56,56,56,]),'FUNCTION':([9,14,18,21,23,24,25,26,33,39,43,51,68,89,102,119,120,125,129,154,],[15,15,15,-20,-7,-3,-5,-6,15,-19,-4,-14,-27,-26,-13,-25,-15,-21,-28,-22,]),'ELSE':([68,89,119,129,135,138,140,143,145,161,162,168,169,170,173,174,],[-27,-26,-25,-28,-41,-43,-44,-40,-42,-45,-48,-53,-51,172,-52,-50,]),'PIPE':([158,],[164,]),'$end':([3,18,21,33,39,125,154,],[0,-2,-20,-1,-19,-21,-22,]),'STRING':([1,38,47,56,63,64,69,79,82,83,84,85,86,87,88,90,130,133,144,150,151,156,],[4,59,59,59,59,95,59,59,59,59,59,59,59,59,59,59,59,148,59,59,59,163,]),'MODEL':([0,],[1,]),'ROLESET':([2,7,],[5,-8,]),'SET':([38,47,56,63,69,79,82,83,84,85,86,87,88,90,130,144,150,151,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'COLON':([29,],[47,]),'NUMBER':([38,47,56,63,69,79,82,83,84,85,86,87,88,90,130,144,150,151,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'NAME':([9,11,15,19,22,23,24,25,26,36,37,38,45,47,50,51,55,56,63,68,69,78,79,82,83,84,85,86,87,88,89,90,92,102,104,119,120,127,129,130,134,135,138,140,141,142,143,144,145,149,150,151,153,161,162,165,166,167,168,169,170,171,172,173,174,],[17,29,34,40,42,-7,17,-5,-6,53,54,62,29,62,76,-14,29,62,62,-27,62,53,62,62,62,62,62,62,62,62,-26,62,118,-13,76,-25,-15,139,-28,62,139,-41,-43,-44,-39,139,-40,62,-42,139,62,62,-38,-45,-48,139,139,139,-53,-51,-49,139,139,-52,-50,]),'TRUE':([38,47,56,63,69,79,82,83,84,85,86,87,88,90,130,144,150,151,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'ROLES':([99,],[121,]),'MINUS':([38,47,56,57,58,59,61,62,63,65,66,69,74,79,81,82,83,84,85,86,87,88,90,91,93,94,95,96,97,106,107,108,109,110,111,112,113,114,115,116,118,130,131,132,144,150,151,155,159,160,],[63,63,63,-78,85,-76,-75,-74,63,-72,-79,63,85,63,85,63,63,63,63,63,63,63,63,-63,-46,-54,-73,-64,85,85,-68,-62,85,-58,-59,-56,-57,-55,85,85,-77,63,-65,-47,63,63,63,85,85,85,]),'COMMA':([12,13,28,30,44,46,48,53,57,59,61,62,65,66,70,73,74,76,80,91,93,94,95,96,107,108,109,110,111,112,113,114,115,116,118,131,132,147,148,163,],[31,-11,45,-70,31,-12,-10,78,-78,-76,-75,-74,-72,-79,31,-69,-71,104,45,-63,-46,-54,-73,-64,-68,-62,-60,-58,-59,-56,-57,-55,-61,130,-77,-65,-47,156,-36,-37,]),'WITH':([71,100,101,126,158,164,],[99,99,-30,-29,-31,-32,]),'ENVIRONMENT':([9,23,24,25,26,51,68,89,102,119,120,129,],[20,-7,20,-5,-6,-14,-27,-26,-13,-25,-15,-28,]),'AGENTATTRSET':([9,23,24,25,26,51,68,89,102,119,120,129,],[16,-7,16,-5,-6,-14,-27,-26,-13,-25,-15,-28,]),'PLUS':([57,58,59,61,62,65,66,74,81,91,93,94,95,96,97,106,107,108,109,110,111,112,113,114,115,116,118,131,132,155,159,160,],[-78,87,-76,-75,-74,-72,-79,87,87,-63,-46,-54,-73,-64,87,87,-68,-62,87,-58,-59,-56,-57,-55,87,87,-77,-65,-47,87,87,87,]),'ONE':([99,],[123,]),'BEHAVIOUR':([9,14,18,21,23,24,25,26,33,39,43,51,68,89,102,119,120,125,129,154,],[22,22,22,-20,-7,-3,-5,-6,22,-19,-4,-14,-27,-26,-13,-25,-15,-21,-28,-22,]),'LT':([57,58,59,61,62,65,66,74,81,91,93,94,95,96,97,106,107,108,109,110,111,112,113,114,115,116,118,131,132,155,159,160,],[-78,82,-76,-75,-74,-72,-79,82,82,-63,-46,-54,-73,-64,82,82,-68,-62,82,-58,-59,-56,-57,-55,82,82,-77,-65,-47,82,82,82,]),'DOT':([17,62,139,],[37,92,37,]),'FALSE':([38,47,56,63,69,79,82,83,84,85,86,87,88,90,130,144,150,151,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'END':([28,30,57,59,61,62,65,66,68,73,74,80,89,91,93,94,95,96,100,101,107,108,109,110,111,112,113,114,115,118,119,126,129,131,132,135,138,140,141,142,143,145,149,153,158,161,162,164,168,169,170,171,173,174,],[46,-70,-78,-76,-75,-74,-72,-79,-27,-69,-71,107,-26,-63,-46,-54,-73,-64,125,-30,-68,-62,-60,-58,-59,-56,-57,-55,-61,-77,-25,-29,-28,-65,-47,-41,-43,-44,-39,154,-40,-42,158,-38,-31,-45,-48,-32,-53,-51,-49,173,-52,-50,]),'WHILE':([68,89,119,127,129,134,135,138,140,141,142,143,145,149,153,161,162,165,166,167,168,169,170,171,172,173,174,],[-27,-26,-25,136,-28,136,-41,-43,-44,-39,136,-40,-42,136,-38,-45,-48,136,136,136,-53,-51,-49,136,136,-52,-50,]),'PYTHONLINK':([38,47,56,63,69,79,82,83,84,85,86,87,88,90,130,144,150,151,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'ALL':([99,],[124,]),'RETURN':([68,89,119,127,129,134,135,138,140,141,142,143,145,149,153,161,162,165,166,167,168,169,170,171,172,173,174,],[-27,-26,-25,144,-28,144,-41,-43,-44,-39,144,-40,-42,144,-38,-45,-48,144,144,144,-53,-51,-49,144,144,-52,-50,]),'EEQUAL':([57,58,59,61,62,65,66,74,81,91,93,94,95,96,97,106,107,108,109,110,111,112,113,114,115,116,118,131,132,155,159,160,],[-78,84,-76,-75,-74,-72,-79,84,84,-63,-46,-54,-73,-64,84,84,-68,-62,84,84,-59,84,84,84,84,84,-77,-65,-47,84,84,84,]),'LIST':([38,47,56,63,69,79,82,83,84,85,86,87,88,90,130,144,150,151,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'RPAREN':([12,13,44,46,48,52,53,57,59,61,62,65,66,70,75,76,81,91,93,94,95,96,105,107,108,109,110,111,112,113,114,115,116,117,118,128,131,132,146,147,148,159,160,163,],[32,-11,72,-12,-10,77,-18,-78,-76,-75,-74,-72,-79,98,103,-24,108,-63,-46,-54,-73,-64,-17,-68,-62,-60,-58,-59,-56,-57,-55,-61,-67,131,-77,-23,-65,-47,-66,157,-36,165,166,-37,]),'VAR':([9,23,24,25,26,51,68,89,102,119,120,127,129,134,135,138,140,141,142,143,145,149,153,161,162,165,166,167,168,169,170,171,172,173,174,],[19,-7,19,-5,-6,-14,-27,-26,-13,-25,-15,19,-28,19,-41,-43,-44,-39,19,-40,-42,19,-38,-45,-48,19,19,19,-53,-51,-49,19,19,-52,-50,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'proccall':([127,134,142,149,165,166,167,171,172,],[135,135,135,135,135,135,135,135,135,]),'literal_list':([36,78,],[52,105,]),'program_opts':([9,24,],[14,43,]),'names_list':([50,104,],[75,128,]),'funcall':([38,47,56,63,69,79,82,83,84,85,86,87,88,90,130,144,150,151,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'list_set_statement':([60,62,67,118,139,],[91,93,96,132,152,]),'expr':([38,47,56,63,69,79,82,83,84,85,86,87,88,90,130,144,150,151,],[58,74,81,94,97,106,109,110,111,112,113,114,115,116,116,155,159,160,]),'assign':([9,24,127,134,142,149,165,166,167,171,172,],[23,23,143,143,143,143,143,143,143,143,143,]),'with_block':([71,100,],[101,126,]),'role_set_statement':([8,27,41,],[12,44,70,]),'then_else_statement':([165,166,172,],[168,170,174,]),'literal_list_set_statement':([16,],[35,]),'program':([0,],[3,]),'role_def':([8,27,31,41,],[13,13,48,13,]),'b_bodies':([9,14,],[18,33,]),'while_block':([127,134,142,149,165,166,167,171,172,],[140,140,140,140,140,140,140,140,140,]),'statement':([127,134,142,149,165,166,167,171,172,],[141,141,153,153,169,169,141,153,169,]),'set_expr_list':([90,130,],[117,146,]),'program_opt':([9,24,],[24,24,]),'with_set':([99,],[122,]),'statements':([127,134,167,],[142,149,171,]),'nameval_pair':([11,45,55,],[30,73,30,]),'role_set':([2,],[6,]),'b_body':([9,14,18,33,],[21,21,39,39,]),'agent_attr_set':([9,24,],[25,25,]),'if_block':([127,134,142,149,165,166,167,171,172,],[138,138,138,138,138,138,138,138,138,]),'nameval_pairs':([11,55,],[28,80,]),'agent_set':([6,],[9,]),'environment_def':([9,24,],[26,26,]),'with_list':([71,],[100,]),'string_list':([133,],[147,]),'returnstmt':([127,134,142,149,165,166,167,171,172,],[145,145,145,145,145,145,145,145,145,]),'agent_model':([0,],[2,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> agent_model role_set agent_set program_opts b_bodies','program',5,'p_program_1','swapl.py',34),
  ('program -> agent_model role_set agent_set b_bodies','program',4,'p_program_2','swapl.py',41),
  ('program_opts -> program_opt','program_opts',1,'p_program_options_1','swapl.py',49),
  ('program_opts -> program_opt program_opts','program_opts',2,'p_program_options_2','swapl.py',53),
  ('program_opt -> agent_attr_set','program_opt',1,'p_program_option_1','swapl.py',58),
  ('program_opt -> environment_def','program_opt',1,'p_program_option_2','swapl.py',63),
  ('program_opt -> assign','program_opt',1,'p_program_option_3','swapl.py',68),
  ('agent_model -> MODEL STRING SEMICOLON','agent_model',3,'p_agent_model','swapl.py',74),
  ('role_set -> ROLESET LPAREN role_set_statement RPAREN SEMICOLON','role_set',5,'p_role_set','swapl.py',81),
  ('role_set_statement -> role_set_statement COMMA role_def','role_set_statement',3,'p_role_set_statement_1','swapl.py',86),
  ('role_set_statement -> role_def','role_set_statement',1,'p_role_set_statement_2','swapl.py',91),
  ('role_def -> BEGIN nameval_pairs END','role_def',3,'p_role_def','swapl.py',95),
  ('agent_set -> AGENTSET LPAREN role_set_statement RPAREN SEMICOLON','agent_set',5,'p_agent_set','swapl.py',104),
  ('agent_attr_set -> AGENTATTRSET literal_list_set_statement SEMICOLON','agent_attr_set',3,'p_agent_attr_set','swapl.py',113),
  ('environment_def -> ENVIRONMENT LPAREN role_set_statement RPAREN SEMICOLON','environment_def',5,'p_environment_def','swapl.py',121),
  ('literal_list_set_statement -> LPAREN literal_list RPAREN','literal_list_set_statement',3,'p_literal_listset','swapl.py',128),
  ('literal_list -> NAME COMMA literal_list','literal_list',3,'p_literal_list_1','swapl.py',132),
  ('literal_list -> NAME','literal_list',1,'p_literal_list_2','swapl.py',137),
  ('b_bodies -> b_bodies b_body','b_bodies',2,'p_b_bodies_1','swapl.py',142),
  ('b_bodies -> b_body','b_bodies',1,'p_b_bodies_2','swapl.py',146),
  ('b_body -> BEHAVIOUR NAME BEGIN with_list END','b_body',5,'p_b_body_1','swapl.py',150),
  ('b_body -> FUNCTION NAME LPAREN names_list RPAREN BEGIN statements END','b_body',8,'p_b_body_2','swapl.py',155),
  ('names_list -> NAME COMMA names_list','names_list',3,'p_names_list_1','swapl.py',164),
  ('names_list -> NAME','names_list',1,'p_name_list_2','swapl.py',168),
  ('assign -> VAR NAME EQUAL expr SEMICOLON','assign',5,'p_assing_1','swapl.py',175),
  ('assign -> NAME EQUAL expr SEMICOLON','assign',4,'p_assing_2','swapl.py',179),
  ('assign -> VAR NAME SEMICOLON','assign',3,'p_assing_3','swapl.py',183),
  ('assign -> NAME DOT NAME EQUAL expr SEMICOLON','assign',6,'p_assing_4','swapl.py',187),
  ('with_list -> with_list with_block','with_list',2,'p_with_list_1','swapl.py',195),
  ('with_list -> with_block','with_list',1,'p_with_list_2','swapl.py',199),
  ('with_block -> WITH with_set BEGIN statements END','with_block',5,'p_with_block_1','swapl.py',206),
  ('with_block -> WITH with_set BEGIN statements END PIPE','with_block',6,'p_with_block_2','swapl.py',210),
  ('with_set -> ALL','with_set',1,'p_with_set_1','swapl.py',217),
  ('with_set -> ONE','with_set',1,'p_with_set_2','swapl.py',221),
  ('with_set -> ROLES LPAREN string_list RPAREN','with_set',4,'p_with_set_3','swapl.py',225),
  ('string_list -> STRING','string_list',1,'p_string_list_1','swapl.py',230),
  ('string_list -> string_list COMMA STRING','string_list',3,'p_string_list_2','swapl.py',234),
  ('statements -> statements statement','statements',2,'p_statements_1','swapl.py',241),
  ('statements -> statement','statements',1,'p_statements_2','swapl.py',245),
  ('statement -> assign','statement',1,'p_statement','swapl.py',249),
  ('statement -> proccall','statement',1,'p_statement','swapl.py',250),
  ('statement -> returnstmt','statement',1,'p_statement','swapl.py',251),
  ('statement -> if_block','statement',1,'p_statement','swapl.py',252),
  ('statement -> while_block','statement',1,'p_statement','swapl.py',253),
  ('proccall -> NAME list_set_statement SEMICOLON','proccall',3,'p_proc_call','swapl.py',260),
  ('funcall -> NAME list_set_statement','funcall',2,'p_fun_call_1','swapl.py',268),
  ('funcall -> NAME DOT NAME list_set_statement','funcall',4,'p_fun_call_2','swapl.py',274),
  ('returnstmt -> RETURN expr SEMICOLON','returnstmt',3,'p_returnstmt','swapl.py',282),
  ('if_block -> IF LPAREN expr RPAREN then_else_statement','if_block',5,'p_if_1','swapl.py',289),
  ('if_block -> IF LPAREN expr RPAREN then_else_statement ELSE then_else_statement','if_block',7,'p_if_2','swapl.py',294),
  ('then_else_statement -> statement','then_else_statement',1,'p_then_else_1','swapl.py',300),
  ('then_else_statement -> BEGIN statements END','then_else_statement',3,'p_then_else_2','swapl.py',304),
  ('while_block -> WHILE LPAREN expr RPAREN then_else_statement','while_block',5,'p_while','swapl.py',311),
  ('expr -> MINUS expr','expr',2,'p_uminus_expr','swapl.py',321),
  ('expr -> expr PLUS expr','expr',3,'p_p_expr','swapl.py',325),
  ('expr -> expr MINUS expr','expr',3,'p_m_expr','swapl.py',329),
  ('expr -> expr TIMES expr','expr',3,'p_t_expr','swapl.py',333),
  ('expr -> expr DIVIDE expr','expr',3,'p_d_expr','swapl.py',337),
  ('expr -> expr EEQUAL expr','expr',3,'p_eequal','swapl.py',341),
  ('expr -> expr LT expr','expr',3,'p_lt','swapl.py',345),
  ('expr -> expr GT expr','expr',3,'p_gt','swapl.py',349),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expression_group','swapl.py',353),
  ('expr -> SET list_set_statement','expr',2,'p_set_expr','swapl.py',357),
  ('expr -> LIST list_set_statement','expr',2,'p_list_expr','swapl.py',362),
  ('list_set_statement -> LPAREN set_expr_list RPAREN','list_set_statement',3,'p_listset','swapl.py',368),
  ('set_expr_list -> expr COMMA set_expr_list','set_expr_list',3,'p_set_expr_list_1','swapl.py',372),
  ('set_expr_list -> expr','set_expr_list',1,'p_set_expr_list_2','swapl.py',377),
  ('expr -> BEGIN nameval_pairs END','expr',3,'p_struct','swapl.py',382),
  ('nameval_pairs -> nameval_pairs COMMA nameval_pair','nameval_pairs',3,'p_namevals_1','swapl.py',388),
  ('nameval_pairs -> nameval_pair','nameval_pairs',1,'p_namevals_2','swapl.py',394),
  ('nameval_pair -> NAME COLON expr','nameval_pair',3,'p_nameval','swapl.py',398),
  ('expr -> funcall','expr',1,'p_fun_expr','swapl.py',403),
  ('expr -> PYTHONLINK STRING','expr',2,'p_pythonlink','swapl.py',407),
  ('expr -> NAME','expr',1,'p_val_expr','swapl.py',411),
  ('expr -> NUMBER','expr',1,'p_num_expr','swapl.py',415),
  ('expr -> STRING','expr',1,'p_string_expr','swapl.py',419),
  ('expr -> NAME DOT NAME','expr',3,'p_field_expr','swapl.py',423),
  ('expr -> TRUE','expr',1,'p_true_expr','swapl.py',427),
  ('expr -> FALSE','expr',1,'p_false_expr','swapl.py',431),
]
