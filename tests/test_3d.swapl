
var Random = { uniform : @pythonlink "random.uniform" };

var Math = { pi : @pythonlink "math.pi",
             fabs : @pythonlink "math.fabs",
             sqrt : @pythonlink "math.sqrt",
             atan2 : @pythonlink "math.atan2" };

model "vtol_uav";

roleset ( { name : "leader" },
          { name : "follower" } );

agentset ( { name : "one", role : "leader" },
           { spawn : 10, role : "follower" } );

environment ( { left: -120, top: -120, right: 120, bottom: 120, z_bottom : 0, z_top: 100 } );

function normalize(angle) {
    while (angle > Math.pi) angle = angle - 2*Math.pi;
    while (angle < -Math.pi) angle = angle + 2*Math.pi;
    return angle;
}

behaviour main {
  with roles("leader") {
    this.x = 0;
    this.y = 0;
    this.z = 20;
    this.yaw = 3.14159/4.0;
    this.image = "arrow_red.png";
  }

  with roles("follower") {
    this.x = Random.uniform(-100, 100);
    this.y = Random.uniform(-100, 100);
    this.z = 20;
    this.yaw = Random.uniform(0, 3);
  }

  with roles("leader") {
    while (1) {
        wait(5);
        this.yaw = normalize(Random.uniform(0, 2*3.14159));
    }
  }
  |
  with roles("follower") {
    var leader = role("leader");
    while (1) {
      var k_hdg = 1.5;

      var align_difference = normalize(leader.yaw - this.yaw);
      this.wz = k_hdg * align_difference;

      wait(0.1);
    }
  }
}

